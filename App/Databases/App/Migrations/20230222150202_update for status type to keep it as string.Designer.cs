// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Web.Databases.App;

#nullable disable

namespace App.Databases.App.Migrations;

[DbContext(typeof(CustomAppDbContext))]
[Migration("20230222150202_update for status type to keep it as string")]
partial class updateforstatustypetokeepitasstring
{
	protected override void BuildTargetModel(ModelBuilder modelBuilder)
	{
#pragma warning disable 612, 618
		modelBuilder
			.HasAnnotation("ProductVersion", "6.0.14")
			.HasAnnotation("Relational:MaxIdentifierLength", 128);

		SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

		modelBuilder.Entity("TODO_Domain_Entities.TaskModel", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<DateTime>("CreationDate")
					.HasColumnType("datetime2");

				b.Property<string>("Description")
					.IsRequired()
					.HasMaxLength(300)
					.HasColumnType("nvarchar(300)");

				b.Property<DateTime>("DueDate")
					.HasColumnType("datetime2");

				b.Property<DateTime>("LastModificationDate")
					.HasColumnType("datetime2");

				b.Property<string>("Status")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Title")
					.IsRequired()
					.HasMaxLength(50)
					.HasColumnType("nvarchar(50)");

				b.Property<int>("TodoListId")
					.HasColumnType("int");

				b.HasKey("Id");

				b.HasIndex("TodoListId");

				b.ToTable("Tasks");
			});

		modelBuilder.Entity("TODO_Domain_Entities.TodoListModel", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

				b.Property<string>("Name")
					.IsRequired()
					.HasMaxLength(60)
					.HasColumnType("nvarchar(60)");

				b.HasKey("Id");

				b.ToTable("TodoLists");
			});

		modelBuilder.Entity("TODO_Domain_Entities.TaskModel", b =>
			{
				b.HasOne("TODO_Domain_Entities.TodoListModel", "TodoList")
					.WithMany("Tasks")
					.HasForeignKey("TodoListId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.Navigation("TodoList");
			});

		modelBuilder.Entity("TODO_Domain_Entities.TodoListModel", b =>
			{
				b.Navigation("Tasks");
			});
#pragma warning restore 612, 618
	}
}
